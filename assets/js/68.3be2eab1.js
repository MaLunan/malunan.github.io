(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{436:function(e,n,s){"use strict";s.r(n);var a=s(5),t=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"需求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[e._v("#")]),e._v(" 需求")]),e._v(" "),n("p",[e._v("前端下载文件，发起请求，后端返回二进制流")]),e._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[e._v("#")]),e._v(" 实现")]),e._v(" "),n("ul",[n("li",[e._v("考虑到项目中可能涉及多处下载，所以进行axios统一拦截")])]),e._v(" "),n("p",[e._v("//axios 拦截器添加判断")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" /// response 响应拦截 查看请求头是否为blob类型\n response => {\n if(response.config && response.config.responseType == 'blob') {\n//type内写请求头的类型\n        const blob = new Blob([response.data], { type: 'application/octet-stream;charset=utf-8' }); //application/vnd.openxmlformats-officedocument.spreadsheetml.sheet这里表示xlsx类型\n        let filename = decodeURI(response.headers['filename']);\n        if ('download' in document.createElement('a')) {\n            const downloadElement = document.createElement('a');\n            let href = '';\n            if(window.URL) href = window.URL.createObjectURL(blob);\n            else href = window.webkitURL.createObjectURL(blob);\n        　　 downloadElement.href = href;\n        　　 downloadElement.download = filename;\n        　　 document.body.appendChild(downloadElement);\n        　　 downloadElement.click();\n        　　 if(window.URL) window.URL.revokeObjectURL(href);\n            else window.webkitURL.revokeObjectURL(href);\n            document.body.removeChild(downloadElement);\n        } else {\n            navigator.msSaveBlob(blob, filename);\n        }\n        return;\n    }\n  }\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);